@page "/books/delete/{id}"

@using System.IO
@attribute [Authorize(Roles = "Administrator")]

@inject IBookRepository bookRepo
@inject IFileUpload fileUpload
@inject NavigationManager navigationManager

<h3>Are you sure you want to delete this record?</h3>
<hr />
<br />

@if (this.isFailed)
{
    <ErrorMessage Message="Something went wrong with the operation."></ErrorMessage>
}

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid Selection. Please Try Again"></ErrorMessage>
}else if (this.Model == null)
{
    <LoadingMessage Message="Loading Author Details"></LoadingMessage>
}
else {
    <div class="col-6">
        <table class="table table-responsive">
            <tr>
                <td><strong>Title</strong></td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td><strong>Author</strong></td>
                <td>
                    @if (@Model.Author !=null)
                    {
                        <a href="/authors/details/@Model.Author.Id">@Model.Author.FirstName @Model.Author.LastName</a> 
                    }
                    else 
                    {
                        <span class="text-muted">No Author Recorded</span>
                    }
                </td>
            </tr>
            <tr>
                <td><strong>ISBN</strong></td>
                <td>@Model.Isbn</td>
            </tr>
            <tr>
                <td><strong>Published Year</strong></td>
                <td>@Model.Year</td>
            </tr>
            <tr>
                <td><strong>Summary</strong></td>
                <td>@Model.Summary</td>
            </tr>
        </table>
        <br />
    </div>
    <div class="col-4">
        <img src="uploads/@Model.Image" style="height:300px; width:300px"/>
        <h3>@Model.Price?.ToString("C2")</h3>
    </div>
}

<button @onclick="DeleteBook" class="btn btn-danger">
    <span class="oi oi-media-skip-backward"></span>
    Delete Book
</button>

<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>


@code {
    [Parameter]
    public string Id { get;  set; }

    private BookModel Model = new BookModel();
    private bool isFailed = false;

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(this.Id);
        this.Model = await this.bookRepo.Get(Endpoints.BookssEndpoint, id);
    }

    protected async Task DeleteBook()
    {
        fileUpload.RemoveFile(this.Model.Image);
        isFailed = !(await bookRepo.Delete(Endpoints.BookssEndpoint, Model.Id));

        if(!isFailed)
        {
            this.BackToList();
      }
    }

    private void BackToList()
    {
        this.navigationManager.NavigateTo("/books");
    }
}
