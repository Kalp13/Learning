@page "/authors/update/{Id}"

@inject IAuthorRepository authorRepo
@inject NavigationManager navigationManager

@if (this.isFailed)
    {
        <div class="alert alert-danger">
            <p>Something went wrong with the registration attempt.</p>
        </div>
    }

@if (this.Model == null)
{
    <LoadingMessage Message="Loading Author Details"></LoadingMessage>
}
else
{
    <h3>Update @Model.FirstName @Model.LastName Details</h3>

    <EditForm Model="Model" OnValidSubmit="UpdateAuthor">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="form-group">
            <label for="firstname">First Name</label>
            <InputText @bind-Value="Model.FirstName" class="form-control" id="firstname"></InputText>
        </div>
        <div class="form-group">
            <label for="lastname">Last Name</label>
            <InputText @bind-Value="Model.LastName" class="form-control" id="lastname"></InputText>
        </div>
        <div class="form-group">
            <label for="biography">Biography</label>
            <InputTextArea @bind-Value="Model.Bio" class="form-control" id="biography"></InputTextArea>
        </div>
        <button class="btn btn-primary" type="submit">
            @*<span class="oi oi-media-skip-backward"></span>*@
            Update
        </button>
        <button @onclick="CancelUpdate" class="btn btn-outline-secondary">
            @*<span class="oi oi-media-skip-backward"></span>*@
            Cancel
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get;  set; }

    private AuthorModel Model = new AuthorModel();

    private bool isFailed = false;

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(this.Id);
        this.Model = await this.authorRepo.Get(Endpoints.AuthorsEndpoint, id);
    }

    private async Task UpdateAuthor()
    {
        bool isSuccess = await this.authorRepo.Update(Endpoints.AuthorsEndpoint, Model, this.Model.Id);
        if (isSuccess)
        {
            this.navigationManager.NavigateTo("/authors");
        }
        else 
        {
            this.isFailed = !isSuccess;
        }
    }

    private void CancelUpdate(){
        this.navigationManager.NavigateTo("/authors");
    }
}
