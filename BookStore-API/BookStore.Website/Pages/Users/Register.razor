@page "/Register"

@using BookStore.Website.Models
@using BookStore.Website.Contracts

@inject IAuthenticationRepository authRepository
@inject NavigationManager navManager

<div class="card">
    <h3 class="card-title">Register Now</h3>
    @if (!this.response)
    {
        <div class="alert alert-danger">
            <p>Something went wrong with the registration attempt.</p>
        </div>
    }
    <div class="card-body">
        <EditForm Model="this.RegistrationModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="form-group">
                <label for="email">Email Address</label>
                <InputText Id="email" class="form-control" @bind-Value="this.RegistrationModel.EmailAddress" />
                <ValidationMessage For="@(() => this.RegistrationModel.EmailAddress)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="this.RegistrationModel.Password" />
                <ValidationMessage For="@(() => this.RegistrationModel.Password)" />
            </div>
            <div class="form-group">
                <label for="confirmpassword">Confirm Password</label>
                <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="this.RegistrationModel.ConfirmPassword" />
                <ValidationMessage For="@(() => this.RegistrationModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary btn-block">Register</button>
        </EditForm>
    </div>
</div>

@code {
    private UserRegistrationModel RegistrationModel = new UserRegistrationModel();

    bool response = true;

    private async Task HandleRegistration()
    {
        var response = await this.authRepository.Register(this.RegistrationModel);

        if (response)
        {
            this.navManager.NavigateTo("/LogIn");
        }
        else
        {
            this.response = true;
        }
    }
}
